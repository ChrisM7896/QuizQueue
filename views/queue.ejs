<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz Queue</title>
    <script src="https://cdn.socket.io/4.8.1/socket.io.min.js"></script>
    <script>
        const socket = io("https://formbeta.yorktechapps.com/", {
            extraHeaders: {
                api: "a4c9743f4e26e3c8cd412bba542620e3db0dbb741d01ade241cd58bb899669f0"
            }
        });


        socket.on('setClass', (newClassId) => {
            console.log(`The user is currently in the class with id ${newClassId}`);
        });
        socket.on('classUpdate', (update) => {
            console.log(`update: ${update}`);
        });
    </script>
</head>

<body>
    <button onclick="startPoll()">Start Formbar Poll</button>
    <button onclick="nextQuestion()">Next Question</button>
    <button onclick="resetQuestions()">Reset Questions</button>
    <button onclick="window.location.href='/'">Back</button>
    <div>
        <h1>Quiz Queue</h1>
        <div id="currentQuestion">

            <h2>Current Question:</h2>
            <p id="prompt">Prompt will go here</p>
            <ul id="options">
                <li>Option 1</li>
                <li>Option 2</li>
                <li>Option 3</li>
                <li>Option 4</li>
            </ul>
        </div>
    </div>
</body>
<script>
    var pollStarted = false;
    var questionNumber = 0;
    var testData = {
        questions: [
            { id: 1, prompt: "What is 2+2?", options: ["3", "4", "5", "spatula"], correct: "4", correctIndex: 1 },
            { id: 2, prompt: "What is the capital of France?", options: ["Berlin", "Madrid", "Paris", "spatula"], correct: "Paris", correctIndex: 2 },
            { id: 3, prompt: "What is the largest planet?", options: ["Earth", "Jupiter", "Mars", "spatula"], correct: "Jupiter", correctIndex: 1 }
        ]
    }
    var current = testData.questions[questionNumber];
    function loadList() {
        //Simulate loading from server
        current = testData.questions[questionNumber];
        document.getElementById("prompt").innerText = current.prompt;
        let optionsList = document.getElementById("options");
        optionsList.innerHTML = "";
        current.options.forEach((option, index) => {
            let li = document.createElement("li");
            li.innerText = option;
            if (index === current.correctIndex) {
                li.style.fontWeight = "bold";
            }
            optionsList.appendChild(li);
        });
    }
    function startPoll() {
        socket.emit('startPoll',
            current.options.length,
            false,
            current.prompt,
            current.options.map((option, index) => {
                return {
                    "answer": option,
                    "weight": 1,
                    "color": "#ff0000"
                };
            }),
            false,
            1,
            [],
            ["-1"],
            [],
            [],
            false
        );
        pollStarted = true;
    };

    function nextQuestion() {
        if (pollStarted) {
            questionNumber++;
            if (questionNumber < testData.questions.length) {
                loadList();
                startPoll();
            } else {
                alert("No more questions in the queue.");
                resetQuestions();
                pollStarted = false;
            }
        } else {
            alert("Poll has not been started.");
        }
    };

    function resetQuestions() {
        questionNumber = 0;
        loadList();
    }

    loadList();
</script>

</html>